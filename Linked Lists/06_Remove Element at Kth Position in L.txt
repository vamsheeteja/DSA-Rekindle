Remove Element at Kth Position in Linked List
Easy
30 / 30
Given a Linked List and an integer k, remove the element at the kth position of the linked list.

Example
List: 1→3→4→7
k: 2
Result: 1→4→7
Testing
Input Format
The first line contains ‘T’ denoting the number of independent test cases.

For each test case the input has three lines:

A number ‘n’, denoting the length of the linked list.
n space-separated integers denoting elements of the linked list.
k denoting the position
Output Format
For each test case, the output has one line with space-separated integers.

Sample Input
2
4
1 3 4 7
2
3
4 5 6
1
Expected Output
1 4 7
5 6
Constraints
1 <= T <= 100

1 <= n <= 1000

1 <= k <= n

1 <= element <= 1000

"""
This is the ListNode class definition

class ListNode:
	def __init__(self, data=0, next=None):
		self.data = data
		self.next = next

"""


class Solution:
	def removekthElement(self, head: ListNode, k: int) -> ListNode:
		# add your logic here
		
		if k == 1:
			head = head.next
			return head
		
		currentHead = head
		
		cnt = 1
		while currentHead:
			if cnt == k: break
			cnt += 1
			prevHead = currentHead
			currentHead = currentHead.next
		
		prevHead.next = currentHead.next
		
		return head
		


