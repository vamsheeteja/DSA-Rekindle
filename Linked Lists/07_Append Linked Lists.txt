Append Linked Lists
Easy
30 / 30
Given two Linked Lists, append second Linked List to end of first Linked List and return the first list.

Example
List 1: 1→3→4→7
List 2: 6→2→5
Result: 1→3→4→7→6→2→5
Testing
Input Format
The first line contains ‘T’ denoting the number of independent test cases.

For each test case the input has three lines:

'n' and 'm', denoting the length of the linked lists.
n space-separated integers denoting elements of the first linked list.
m space-separated integers denoting elements of the second linked list.
Output Format
For each test case, the output has one line with space-separated integers.

Sample Input
2
4 3
1 3 4 7
6 2 5
1 3
3
4 5 6
Expected Output
1 3 4 7 6 2 5
3 4 5 6

"""
This is the ListNode class definition

class ListNode:
	def __init__(self, data=0, next=None):
		self.data = data
		self.next = next

"""


class Solution:
	def appendLists(self, list1: ListNode, list2: ListNode) -> ListNode:
		# add your logic here
		
		# We have to return the head of the first list so we need to save it 
		
		currentHead = list1 # list1 is the head of the ll
		
		while currentHead:
			# Come of the loop for the last node (dont go to that None obj)
			if(currentHead.next is None): break
			currentHead = currentHead.next
		
		currentHead.next = list2
		
		return list1
		
		
		
		
		


