Positive Cumulative Sum
Easy

The cumulative sum of an array at index i is defined as the sum of all elements of the array from index 0 to index i.

Examples
Initial Array: [1, -2, 3, 4, -6]
Cumulative Sum: [1, -1, 2, 6, 0]
Initial Array: [1, -1, -1, -1, 1]
Cumulative Sum: [1, 0, -1, -2, -1]
Initial Array: [1, 3, 5, 7]
Cumulative Sum: [1, 4, 9, 16]
The positive cumulative sum of an array is a list of only those cumulative sums which are positive.

Examples
Initial Array: [1, -2, 3, 4, -6]
Cumulative Sum: [1, -1, 2, 6, 0]
Positive Cumulative Sum: [1, 2, 6]
Initial Array: [1, -1, -1, -1, 1]
Cumulative Sum: [1, 0, -1, -2, -1]
Positive Cumulative Sum: [1]
Initial Array: [1, 3, 5, 7]
Cumulative Sum: [1, 4, 9, 16]
Positive Cumulative Sum: [1, 4, 9, 16]
Given an array, return its positive cumulative sum.

class Solution:
	def getPositiveCumulativeSum(self, arr: List[int]) -> List[int]:
		# add your logic here
		# creating an empty list with dummy val (0)
		result_arr = [0] * len(arr)
		
		pos_cum_sum_arr = []
		
		# appending the first val as it is to the result_arr
		result_arr[0] = arr[0]
		if(arr[0] > 0): pos_cum_sum_arr.append(arr[0])
		
		for i in range(1, len(arr)):
			result_arr[i] = result_arr[i - 1] + arr[i]
			if(result_arr[i] > 0): pos_cum_sum_arr.append(result_arr[i])
		
		return pos_cum_sum_arr



